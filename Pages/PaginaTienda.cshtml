@page
@model FrontCrossyTec.Pages.PaginaTiendaModel
@{

}

<body class="body_tienda">
    <span style="font-size:30px;cursor:pointer" onclick="openNav()">☰ Menú</span>
    <div id="navDrawer" class="nav-drawer">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">×</a>
        <a asp-page="/PaginaMenu">Inicio</a>
        <a asp-page="/PaginaTienda">Tienda</a>
        <a asp-page="/PaginaScoreboard">Puntajes</a>
        <a asp-page="/PaginaPerfil">Perfil</a>
        <a href="Index" class="logout-button">Logout</a>
    </div>

    <div class="pagina-tienda">
        <h1 class="text-center">Bienvenidos a Nuestra Tienda de Cajas</h1>

        <!-- Recuadro de TecCoins -->
        <div class="teccoins-display">
            <h3 style="display: inline-block; margin-right: 10px;">TecCoins: @Model.UserCoins</h3>
            <img src="images/moneda_di_oro.png" alt="Moneda" style="height: 50px; vertical-align: middle;">
        </div>


        <!-- Contenido existente de la tienda -->
        <div class="container mt-5">
            <div class="row">
                @foreach (var caja in Model.cajas)
                {
                    <div class="col-md-3 mb-4">
                        <div class="card">
                            <!-- Imagen de la caja con eventos onmouseover y onmouseout -->
                            <img src="/images/caja/caja@(caja.ChestId).png"
                                 class="card-img-top caja-interactiva"
                                 alt="Imagen de la caja"
                                 onmouseover="showItems('@caja.ChestId')"
                                 onmouseout="hideItems('@caja.ChestId')">
                            <div class="card-body">
                                <h5 class="card-title">@caja.ChestName</h5>
                                <button type="button" class="btn-comprar" onclick="confirmarCompra(@caja.ChestId, @caja.Price)">
                                    Comprar @($"${caja.Price}")
                                </button>
                            </div>

                            <!-- Div que contiene los artículos del cofre -->
                            <div id="items-@caja.ChestId" class="cofre-detalles" style="display: none;">
                                <h6>Artículos:</h6>
                                @foreach (var item in Model.ItemsPorCaja[caja.ChestId])
                                {
                                    <p class="nombre-articulo">@item.ItemName</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Script para mostrar y ocultar los artículos -->
        <script>function showItems(cofreId) {
                var itemsDiv = document.getElementById('items-' + cofreId);
                if (itemsDiv) {
                    itemsDiv.style.display = 'block';
                }
            }

            function hideItems(cofreId) {
                var itemsDiv = document.getElementById('items-' + cofreId);
                if (itemsDiv) {
                    itemsDiv.style.display = 'none';
                }
            }</script>

        <script>function openNav() {
                document.getElementById("navDrawer").style.left = "0";
                document.body.classList.add("open");
            }

            function closeNav() {
                document.getElementById("navDrawer").style.left = "-250px";
                document.body.classList.remove("open");
            }</script>

        <script>
    function confirmarCompra(chestId, price) {
        if (confirm("¿Estás seguro de que quieres comprar esta caja?")) {
            if (@Model.UserCoins >= price) {
                // Calcula las monedas restantes después de la compra
                var newCoinAmount = @Model.UserCoins - price;

                // Llamada a la API para actualizar las monedas del usuario
                fetch(`/api/UpdateUserCoins?email=${encodeURIComponent(userEmail)}&newCoins=${newCoinAmount}`, {
                    method: 'PUT'
                })
                .then(response => {
                    if (response.ok) {
                        // Recargar la página o actualizar la interfaz de usuario
                        // Por ejemplo, puedes recargar la página para actualizar los datos:
                        location.reload();

                        // O puedes actualizar la interfaz de usuario directamente aquí
                        // Por ejemplo: document.getElementById('id_del_elemento').innerText = newCoinAmount;

                        // Mostrar mensaje de compra exitosa
                        alert("Compra realizada con éxito. Tus monedas han sido actualizadas.");
                    } else {
                        alert("Error al realizar la compra.");
                    }
                })
                .catch(error => {
                    console.error('Error al realizar la compra:', error);
                });
            } else {
                alert("Saldo insuficiente para realizar esta compra.");
            }
        }
    }
        </script>

</body>
