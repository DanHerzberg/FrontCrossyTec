@page
@model FrontCrossyTec.Pages.PaginaAdminModel
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('stateUserChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.UserCountsByState.Select(x => x.State))),
                    datasets: [{
                        label: 'Usuarios por Estado',
                        data: @Html.Raw(Json.Serialize(Model.UserCountsByState.Select(x => x.UserCount))),
                        backgroundColor: 'rgba(0, 123, 255, 0.5)',
                        borderColor: 'rgba(0, 123, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });
    </script>
    <script>
        var ageData = @Html.Raw(Json.Serialize(Model.UserCountsByAge));
        console.log(ageData);
        var ctx = document.getElementById('ageDistributionChart').getContext('2d');
        var ageChart = new Chart(ctx, {
            type: 'bar', // Tipo de gráfico, puede ser 'line', 'pie', etc.
            data: {
                labels: ageData.map(a => a.age.toString()), // Convierte las edades a cadenas para las etiquetas
                datasets: [{
                    label: 'Distribución de Edad',
                    data: ageData.map(a => a.userCount),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    </script>
    <script>
        var genderData = @Html.Raw(Json.Serialize(Model.UserCountsByGender));
        var ctx = document.getElementById('genderDistributionChart').getContext('2d');
        var genderChart = new Chart(ctx, {
            type: 'pie', // Un gráfico de pastel podría ser adecuado para mostrar distribuciones
            data: {
                labels: genderData.map(g => g.gender),
                datasets: [{
                    data: genderData.map(g => g.userCount),
                    backgroundColor: [
                        // Colores para cada segmento del gráfico de pastel
                        '#FF6384',
                        '#36A2EB',
                        '#FFCE56'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Distribución de Género'
                    }
                }
            }
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('coinsByStateChart').getContext('2d');
            var coinsByStateChart = new Chart(ctx, {
                type: 'line', // Un gráfico de barras para representar las monedas por estado
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.CoinsByState.Select(x => x.State))),
                    datasets: [{
                        label: 'Monedas por Estado',
                        data: @Html.Raw(Json.Serialize(Model.CoinsByState.Select(x => x.TotalCoins))),
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>

}
<div class="boton-admin">
<a href="Index" class="logoutAdmin-button">Logout</a>
<h5 class="page-title">Panel de Administrador</h5>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <h3 class="chart-title">Usuarios por estado</h3>
            <canvas id="stateUserChart" width="400" height="400"></canvas>
        </div>
        <div class="col-md-6">
            <h3 class="chart-title">Edades de los usuarios</h3>
            <canvas id="ageDistributionChart" width="400" height="400"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <h3 class="chart-title">Géneros de los usuarios</h3>
            <canvas id="genderDistributionChart" width="400" height="400"></canvas>
        </div>
        <div class="col-md-6">
            <h3 class="chart-title">Monedas por estado</h3>
            <canvas id="coinsByStateChart" width="400" height="400"></canvas>
        </div>
    </div>
</div>